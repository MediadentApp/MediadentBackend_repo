describe('Email Verification API', () => {
  it('should verify the user with valid OTP', async () => {
    const userRes = await request(app)
      .post('/api/v1/auth/register')
      .send({
        email: 'verify@example.com',
        password: 'password123',
      });

    // Assume OTP is sent to email and stored in the database
    const otp = '123456'; // In reality, fetch from the database or mock it

    const res = await request(app)
      .post('/api/v1/auth/verify')
      .send({
        email: 'verify@example.com',
        otp,
      });

    expect(res.statusCode).toEqual(200);
    expect(res.body.message).toBe('Email verified successfully');
  });

  it('should return an error for invalid OTP', async () => {
    const res = await request(app)
      .post('/api/v1/auth/verify')
      .send({
        email: 'verify@example.com',
        otp: 'wrongOTP',
      });

    expect(res.statusCode).toEqual(400);
    expect(res.body).toHaveProperty('error');
  });
});
